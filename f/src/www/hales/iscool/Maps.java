package www.hales.iscool;


import static com.codename1.ui.CN.*;
import com.codename1.components.InteractionDialog;
import com.codename1.components.ToastBar;
import com.codename1.googlemaps.MapContainer;
import com.codename1.location.Location;
import com.codename1.location.LocationListener;
import com.codename1.location.LocationManager;
import com.codename1.maps.Coord;
import com.codename1.ui.*;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.geom.Rectangle;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.layouts.LayeredLayout;
import com.codename1.ui.plaf.Style;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;

import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class Maps implements LocationListener {

    private static final String HTML_API_KEY = "AIzaSyC8FNcObdsd_cCtoAaZzQ-B1j6WSQSRu3M";
    private double Lat =18.0;
    private double Long =-77.0;

    private Form current;
    Location gpsLocation = null;

    public void init(Object context) {
        try {
            Resources theme = Resources.openLayered("/theme");
            UIManager.getInstance().setThemeProps(theme.getTheme(theme.getThemeResourceNames()[0]));
            Display.getInstance().setCommandBehavior(Display.COMMAND_BEHAVIOR_SIDE_NAVIGATION);
            UIManager.getInstance().getLookAndFeel().setMenuBarClass(SideMenuBar.class);
        } catch (IOException e) {
            e.printStackTrace();
        }


    }

    public void start() {
        if (current != null) {
            current.show();
            return;

        }

        Form hi = new Form("");
        hi.setLayout(new BorderLayout());
        final MapContainer cnt = new MapContainer(HTML_API_KEY);

        Button btnMoveCamera = new Button("Move Camera");
        btnMoveCamera.addActionListener(e->{
            cnt.setCameraPosition(new Coord(18.867, -77.206));

        });

        Style s = new Style();
        s.setFgColor(0xff0000);
        s.setBgTransparency(0);
        FontImage markerImg = FontImage.createMaterial(FontImage.MATERIAL_PLACE, s, Display.getInstance().convertToPixels(3));

        GPSTracking();

        Button btnGPS = new Button("Track");
        btnGPS.addActionListener(e->{
            cnt.setCameraPosition(new Coord(Lat, Long));
            cnt.zoom(new Coord(Lat,Long),11);

            ToastBar.showErrorMessage("Lat:"+Lat+"Long"+Long);

            cnt.addMarker(
                    EncodedImage.createFromImage(markerImg, false),
                    cnt.getCameraPosition(),
                    "Your Location",
                    "",
                    evt -> {
                        ToastBar.showMessage("You clicked the marker", FontImage.MATERIAL_PLACE);
                    }
            );

        });

        Button btnAddMarker = new Button("Add Marker");
        btnAddMarker.addActionListener(e->{

            cnt.setCameraPosition(new Coord(41.889, -87.622));
            cnt.addMarker(
                    EncodedImage.createFromImage(markerImg, false),
                    cnt.getCameraPosition(),
                    "Hi marker",
                    "Optional long description",
                    evt -> {
                        ToastBar.showMessage("You clicked the marker", FontImage.MATERIAL_PLACE);
                    }
            );

        });

        Button btnAddPath = new Button("Add Path");
        btnAddPath.addActionListener(e->{

            cnt.addPath(
                    cnt.getCameraPosition(),
                    new Coord(45,-71) //get restaurant location here
            );
        });


        Button btnClearAll = new Button("Clear All");
        btnClearAll.addActionListener(e->{
            cnt.clearMapLayers();
        });

        cnt.addTapListener(e->{
            TextField enterName = new TextField();
            Container wrapper = BoxLayout.encloseY(new Label("Name:"), enterName);
            InteractionDialog dlg = new InteractionDialog("Add Marker");
            dlg.getContentPane().add(wrapper);
            enterName.setDoneListener(e2->{
                String txt = enterName.getText();
                cnt.addMarker(
                        EncodedImage.createFromImage(markerImg, false),
                        cnt.getCoordAtPosition(e.getX(), e.getY()),
                        enterName.getText(),
                        "",
                        e3->{
                            ToastBar.showMessage("You clicked "+txt, FontImage.MATERIAL_PLACE);
                        }
                );
                dlg.dispose();
            });
            dlg.showPopupDialog(new Rectangle(e.getX(), e.getY(), 10, 10));
            enterName.startEditingAsync();
        });

        Container root = LayeredLayout.encloseIn(
                BorderLayout.center(cnt),
                BorderLayout.south(
                        FlowLayout.encloseBottom(btnMoveCamera, btnGPS, btnAddMarker, btnAddPath, btnClearAll)
                )
        );

        hi.add(BorderLayout.CENTER, root);
        hi.show();

    }


    public void GPSTracking()
    {

        try {
            Lat=Display.getInstance().getLocationManager().getCurrentLocation().getLatitude();

        } catch (IOException e) {
            e.printStackTrace();
        }

        try {
            Long=Display.getInstance().getLocationManager().getCurrentLocation().getLongitude();
        } catch (IOException e) {
            e.printStackTrace();
        }


    }

    public void stop() {
        current = Display.getInstance().getCurrent();
    }

    public void destroy() {
    }

    @Override
    public void locationUpdated(Location location) {

    }

    @Override
    public void providerStateChanged(int newState) {

    }





}